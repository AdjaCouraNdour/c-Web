// <auto-generated />
using System;
using GestionBoutiqueC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionBoutiqueWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241113163212_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionBoutiqueC.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surnom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Rue de Paris",
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 523, DateTimeKind.Local).AddTicks(2294),
                            Surnom = "kiki",
                            Telephone = "774799479",
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 523, DateTimeKind.Local).AddTicks(3872),
                            UserId = 0
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Rue de Lyon",
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 523, DateTimeKind.Local).AddTicks(6323),
                            Surnom = "coura",
                            Telephone = "77479944",
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 523, DateTimeKind.Local).AddTicks(6324),
                            UserId = 0
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Rue de Marseille",
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 523, DateTimeKind.Local).AddTicks(6330),
                            Surnom = "loulou",
                            Telephone = "774799473",
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 523, DateTimeKind.Local).AddTicks(6331),
                            UserId = 0
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Dette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<double>("MontantRestant")
                        .HasColumnType("float");

                    b.Property<double>("MontantVerse")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Dettes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 526, DateTimeKind.Local).AddTicks(8419),
                            Date = new DateTime(2024, 10, 13, 16, 32, 11, 526, DateTimeKind.Local).AddTicks(8421),
                            Montant = 500.0,
                            MontantRestant = 300.0,
                            MontantVerse = 200.0,
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 526, DateTimeKind.Local).AddTicks(8420)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 527, DateTimeKind.Local).AddTicks(1164),
                            Date = new DateTime(2024, 9, 13, 16, 32, 11, 527, DateTimeKind.Local).AddTicks(1166),
                            Montant = 1200.0,
                            MontantRestant = 700.0,
                            MontantVerse = 500.0,
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 527, DateTimeKind.Local).AddTicks(1165)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 1,
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 527, DateTimeKind.Local).AddTicks(1191),
                            Date = new DateTime(2024, 8, 13, 16, 32, 11, 527, DateTimeKind.Local).AddTicks(1192),
                            Montant = 750.0,
                            MontantRestant = 0.0,
                            MontantVerse = 750.0,
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 527, DateTimeKind.Local).AddTicks(1192)
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actif")
                        .HasColumnType("bit");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            ClientId = 1,
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 525, DateTimeKind.Local).AddTicks(9316),
                            Email = "admin@example.com",
                            Login = "admin",
                            Password = "admin",
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 525, DateTimeKind.Local).AddTicks(9320)
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            ClientId = 2,
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 525, DateTimeKind.Local).AddTicks(9789),
                            Email = "user1@example.com",
                            Login = "user1",
                            Password = "user1",
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 525, DateTimeKind.Local).AddTicks(9790)
                        },
                        new
                        {
                            Id = 3,
                            Actif = false,
                            ClientId = 3,
                            CreateAt = new DateTime(2024, 11, 13, 16, 32, 11, 525, DateTimeKind.Local).AddTicks(9797),
                            Email = "Boutiquier@example.com",
                            Login = "Boutiquier",
                            Password = "Boutiquier",
                            UpdateAt = new DateTime(2024, 11, 13, 16, 32, 11, 525, DateTimeKind.Local).AddTicks(9798)
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Client", b =>
                {
                    b.HasOne("GestionBoutiqueC.Entities.User", "User")
                        .WithOne("Client")
                        .HasForeignKey("GestionBoutiqueC.Entities.Client", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Dette", b =>
                {
                    b.HasOne("GestionBoutiqueC.Entities.Client", "Client")
                        .WithMany("Dettes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Client", b =>
                {
                    b.Navigation("Dettes");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.User", b =>
                {
                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}

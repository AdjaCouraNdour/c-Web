// <auto-generated />
using System;
using GestionBoutiqueC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionBoutiqueWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionBoutiqueC.Entities.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtatArticle")
                        .HasColumnType("int");

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prix")
                        .HasColumnType("int");

                    b.Property<double>("QteStock")
                        .HasColumnType("float");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(7765),
                            EtatArticle = 0,
                            Libelle = "Bonbon Jina",
                            Prix = 100,
                            QteStock = 50.0,
                            Reference = "A00001",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(7766)
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surnom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Rue de Paris",
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(1999),
                            Surnom = "kiki",
                            Telephone = "774799479",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(3398),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "123 Rue de Dakar",
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(6448),
                            Surnom = "Adja Coura",
                            Telephone = "774790479",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(6449),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = " Saint Louis",
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(6454),
                            Surnom = "Annha",
                            Telephone = "774799409",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(6455),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Address = " Saint Louis",
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(6459),
                            Surnom = "Padama",
                            Telephone = "770009409",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 838, DateTimeKind.Local).AddTicks(6459),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArticleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetteId")
                        .HasColumnType("int");

                    b.Property<double>("QteDette")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("DetteId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleId = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(7991),
                            DetteId = 1,
                            QteDette = 5.0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(7994)
                        },
                        new
                        {
                            Id = 2,
                            ArticleId = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(239),
                            DetteId = 2,
                            QteDette = 5.0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(243)
                        },
                        new
                        {
                            Id = 3,
                            ArticleId = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(248),
                            DetteId = 3,
                            QteDette = 5.0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(249)
                        },
                        new
                        {
                            Id = 4,
                            ArticleId = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(253),
                            DetteId = 4,
                            QteDette = 5.0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 843, DateTimeKind.Local).AddTicks(255)
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Dette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtatDette")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<double>("MontantRestant")
                        .HasColumnType("float");

                    b.Property<double>("MontantVerse")
                        .HasColumnType("float");

                    b.Property<int>("TypeDette")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Dettes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 841, DateTimeKind.Local).AddTicks(6778),
                            Date = new DateTime(2024, 10, 17, 23, 50, 47, 841, DateTimeKind.Local).AddTicks(7520),
                            EtatDette = 0,
                            Montant = 500.0,
                            MontantRestant = 300.0,
                            MontantVerse = 200.0,
                            TypeDette = 0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 841, DateTimeKind.Local).AddTicks(6782)
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(920),
                            Date = new DateTime(2024, 10, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(923),
                            EtatDette = 0,
                            Montant = 500.0,
                            MontantRestant = 300.0,
                            MontantVerse = 200.0,
                            TypeDette = 0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(921)
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 2,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(946),
                            Date = new DateTime(2024, 10, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(948),
                            EtatDette = 0,
                            Montant = 500.0,
                            MontantRestant = 300.0,
                            MontantVerse = 200.0,
                            TypeDette = 0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(947)
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 3,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(953),
                            Date = new DateTime(2024, 10, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(954),
                            EtatDette = 0,
                            Montant = 500.0,
                            MontantRestant = 300.0,
                            MontantVerse = 200.0,
                            TypeDette = 0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 842, DateTimeKind.Local).AddTicks(953)
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DetteId")
                        .HasColumnType("int");

                    b.Property<double>("Montant")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DetteId");

                    b.ToTable("Paiements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 846, DateTimeKind.Local).AddTicks(7838),
                            Date = new DateTime(2024, 11, 17, 23, 50, 47, 846, DateTimeKind.Local).AddTicks(9423),
                            DetteId = 1,
                            Montant = 200.0,
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 846, DateTimeKind.Local).AddTicks(7841)
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Actif")
                        .HasColumnType("bit");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Actif = true,
                            ClientId = 1,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(7431),
                            Email = "admin@example.com",
                            Login = "admin",
                            Password = "admin",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(7436),
                            UserRole = 1
                        },
                        new
                        {
                            Id = 2,
                            Actif = true,
                            ClientId = 2,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(8348),
                            Email = "boutiquier@example.com",
                            Login = "boutiquier",
                            Password = "boutiquier",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(8349),
                            UserRole = 1
                        },
                        new
                        {
                            Id = 3,
                            Actif = true,
                            ClientId = 3,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(8356),
                            Email = "client@example.com",
                            Login = "client",
                            Password = "client",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(8356),
                            UserRole = 1
                        },
                        new
                        {
                            Id = 4,
                            Actif = true,
                            ClientId = 4,
                            CreateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(8361),
                            Email = "padma@example.com",
                            Login = "padma",
                            Password = "padma",
                            UpdateAt = new DateTime(2024, 11, 17, 23, 50, 47, 840, DateTimeKind.Local).AddTicks(8362),
                            UserRole = 1
                        });
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Client", b =>
                {
                    b.HasOne("GestionBoutiqueC.Entities.User", "User")
                        .WithOne("Client")
                        .HasForeignKey("GestionBoutiqueC.Entities.Client", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Detail", b =>
                {
                    b.HasOne("GestionBoutiqueC.Entities.Article", "Article")
                        .WithMany("Details")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionBoutiqueC.Entities.Dette", "Dette")
                        .WithMany("Details")
                        .HasForeignKey("DetteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Dette");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Dette", b =>
                {
                    b.HasOne("GestionBoutiqueC.Entities.Client", "Client")
                        .WithMany("Dettes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Paiement", b =>
                {
                    b.HasOne("GestionBoutiqueC.Entities.Dette", "Dette")
                        .WithMany("Paiements")
                        .HasForeignKey("DetteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dette");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Article", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Client", b =>
                {
                    b.Navigation("Dettes");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.Dette", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("GestionBoutiqueC.Entities.User", b =>
                {
                    b.Navigation("Client");
                });
#pragma warning restore 612, 618
        }
    }
}
